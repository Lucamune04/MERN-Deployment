{"version":3,"sources":["views/homePage.js","views/singlePet.js","components/form.js","views/createPet.js","views/editPet.js","App.js","serviceWorker.js","index.js","components/style.module.css"],"names":["useState","shelters","setShelters","useEffect","axios","get","then","response","data","catch","e","console","log","className","Style","table","map","shelter","id","key","name","type","to","_id","SinglePet","props","setShelter","description","skill1","skill2","skill3","value","onClick","delete","target","navigate","pet","setName","setType","setDescription","setSkill1","setSkill2","setSkill3","handleSubmit","preventDefault","onSubmit","onChange","btn","action","errors","setErrors","err","event","post","errorArr","push","properties","message","Editpet","setPet","put","App","path","from","noThrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.3023a4d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\nimport {Link}  from '@reach/router'\r\nimport Style from \"../components/style.module.css\"\r\n\r\n\r\nexport default ()=>{\r\n    const [shelters,setShelters]=useState([])\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n        .then(response=>setShelters(response.data))\r\n        .catch(e=>console.log(e))\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h3>These pets are looking for a good home</h3>\r\n            <table className={Style.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {shelters.map((shelter,id)=>(\r\n                        <tr key={id}>\r\n                            <th>{shelter.name}</th>\r\n                            <th>{shelter.type}</th>\r\n                            <th><Link to={\"/pets/\"+ shelter._id}>Details</Link></th> | <th><Link to={\"/pets/\"+ shelter._id+\"/edit\"}>Edit</Link></th> \r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                \r\n            </table>\r\n            <Link to=\"/pets/new\">add a pet to the shelter</Link>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router'\r\n\r\n\r\nexport default function SinglePet(props){\r\n    const [shelter,setShelter]=useState(null)\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pets/\"+props.id)\r\n        .then(response=>setShelter(response.data));\r\n    },[props.id]);\r\n\r\n\r\n    const handleDelete=(e)=>{\r\n        axios.delete(\"http://localhost:8000/api/pets/\"+e.target.value)\r\n        .then(()=>navigate('/'))\r\n        .catch(e=>console.log(e))\r\n    }\r\n\r\n    if(shelter==null) return \"loading....\"\r\n\r\n    return(\r\n        <div>\r\n        \r\n        <h3>Details About :{shelter.name}</h3>\r\n        <p>Pet Type : {shelter.type}</p>\r\n        <p>Description : {shelter.description}</p>\r\n        <p>Skills:</p>\r\n        <p>{shelter.skill1}</p>\r\n        <p>{shelter.skill2}</p>\r\n        <p>{shelter.skill3}</p>\r\n        <button value ={shelter._id} onClick={handleDelete}>Adopt {shelter.name}</button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport Style from \"../components/style.module.css\"\r\n\r\n\r\nexport default (props)=>{\r\n    const [name,setName]=useState(props.pet?.name || '')\r\n    const[type,setType]=useState(props.pet?.type || '')\r\n    const [description,setDescription]=useState(props.pet?.description || '')\r\n    const [skill1,setSkill1]=useState(props.pet?.skill1 || '')\r\n    const [skill2,setSkill2]=useState(props.pet?.skill2 || '')\r\n    const [skill3,setSkill3]=useState(props.pet?.skill3 || '')\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Pet Name:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setName(e.target.value)} value={name}/></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Pet Type:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setType(e.target.value)} value={type}/></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Pet Description:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setDescription(e.target.value)} value={description}/></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Skills (optional):</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Skill 1:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setSkill1(e.target.value)} value={skill1}/></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Skill 2:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setSkill2(e.target.value)} value={skill2}/></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Skill 3:</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><input type=\"text\" onChange={e=>setSkill3(e.target.value)} value={skill3}/></th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n    <button className={Style.btn} onClick={handleSubmit}>{props.action}</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport Form from \"../components/form\"\r\nimport axios from 'axios'\r\nimport { navigate } from '@reach/router';\r\n\r\n\r\nexport default (props)=>{\r\n    \r\n    const [errors,setErrors]=useState([])\r\n    const handleSubmit=(event)=>{\r\n        axios.post(\"http://localhost:8000/api/pets/\",{\r\n            name:event.name,\r\n            type:event.type,\r\n            description:event.description,\r\n            skill1:event.skill1,\r\n            skill2:event.skill2,\r\n            skill3:event.skill3\r\n    })\r\n    .then(()=>navigate(\"/processing\"))\r\n    .catch(err=>{\r\n        const errors = err.response.data.errors; \r\n        const errorArr = []; \r\n        for (const key in errors) { \r\n            errorArr.push(errors[key].properties.message)\r\n        }\r\n        // Set Errors\r\n        setErrors(errorArr);\r\n    })\r\n    }\r\n    return (\r\n    <div>\r\n    <h3>Know a pet needing a home?</h3>\r\n    {errors.map((err, id) => <p key={id}>{err}</p>)} \r\n    <Form \r\n        onSubmit={handleSubmit}\r\n        action=\"Add Pet\">\r\n    </Form>\r\n    \r\n    \r\n    </div>\r\n\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {navigate} from '@reach/router'\r\nimport axios from 'axios'\r\nimport Form from \"../components/form\"\r\n\r\nexport default function Editpet(props){\r\n    const [pet,setPet]=useState('')\r\n    const[errors,setErrors]=useState([])\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/pets/'+props.id)\r\n        .then(response=>{\r\n            setPet(response.data)\r\n        })\r\n    },[props.id])\r\n\r\n\r\n    function handleSubmit(event){\r\n        axios.put('http://localhost:8000/api/pets/'+props.id,event)\r\n        .then(() =>navigate('/'))\r\n        .catch(err=>{\r\n            const errors = err.response.data.errors; \r\n            const errorArr = []; \r\n            for (const key in errors) { \r\n                errorArr.push(errors[key].properties.message)\r\n            }\r\n            // Set Errors\r\n            setErrors(errorArr);\r\n        })\r\n    }\r\n\r\n    if (pet==='') return \"Loading...\"\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h1>Edit {pet.name}</h1>\r\n            {errors.map((err, id) => <p key={id}>{err}</p>)}\r\n            <Form pet={pet} onSubmit={handleSubmit} action=\"Edit Pet\"/>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Router, Redirect ,Link} from '@reach/router'\nimport Home from \"./views/homePage\"\nimport SinglePet from './views/singlePet'\nimport Create from \"./views/createPet\"\nimport Edit from \"./views/editPet\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Link to='/'>Back to home</Link>\n      <h1>Pet Shelter</h1>\n     <Router>\n       <Home path=\"/\"/>\n       <Edit path=\"/pets/:id/edit\"/>\n       <SinglePet path=\"/pets/:id\"/>\n       <Create path=\"/pets/new\"/>\n       <Redirect from=\"/processing\" to='/' noThrow/>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__1VN77\"};"],"sourceRoot":""}